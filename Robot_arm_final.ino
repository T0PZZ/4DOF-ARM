#include "U8glib.h"
#define SCK A0
#define SDA A1
#define RES A2  // oled screen library, pins and U8g constructor
#define DC A3
#define CS A4
U8GLIB_SH1106_128X64 u8g(SCK, SDA, CS, DC, RES);

// buttons  servo_number_position(increment/decrement)
#define servo_1_plus 7   // turn arm right
#define servo_1_minus 6  // turn arm left
#define servo_2_plus 5   // lift claw
#define servo_2_minus 4  // lower claw
#define servo_3_plus 3   // move claw forward
#define servo_3_minus 2  // move claw backward
#define servo_4_plus 1   // claw pinnch
#define servo_4_minus 0  // claw release

#include <Servo.h>  // Servo library
#define servo_1 13  // rotation OY
#define servo_2 12  // claw OY movement
#define servo_3 11  // claw OX movement
#define servo_4 10  // claw pinching

Servo s1, s2, s3, s4;                                                                              // servo declaration
int servo_1_position = 90, servo_2_position = 120, servo_3_position = 30, servo_4_position = 100;  // servo initial positions
int position_change = 4, pinch = 2;                                                                // incrementatnion/decrementation values, pinch is meant for claw;

float servo_1_percents;
float servo_2_percents;
float servo_3_percents;
float servo_4_percents;  // float values to calculate percent usage

byte servo_1_percent_usage;
byte servo_2_percent_usage;
byte servo_3_percent_usage;
byte servo_4_percent_usage;  // rounded float values to calculate percent usage

byte MODE = 0;

#define GUI_width 128  // Defining GUI bitmap
#define GUI_height 64
static unsigned char GUI_bits[] U8G_PROGMEM = {
  0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x20, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x42, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc9, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x38, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x48, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x2c, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x81, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x44, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x81, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x20, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x48, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x20, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf1, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x44, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x19, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x20, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x48, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x20, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x09, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x41, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x09, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf9, 0x42, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xf8, 0xff, 0x01, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x00,
  0x70, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0c,
  0x01, 0x00, 0x00, 0x00, 0xf8, 0xc0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0x12, 0x0e, 0x01, 0x00, 0x00, 0x00, 0x20, 0x60, 0x10, 0x00,
  0x70, 0xcc, 0xe7, 0xbe, 0x07, 0x00, 0x21, 0x00, 0x21, 0xf4, 0x3e, 0x00,
  0x20, 0x38, 0x10, 0x00, 0x90, 0x12, 0x91, 0x88, 0x00, 0x80, 0x40, 0x00,
  0x21, 0x14, 0x08, 0x00, 0x20, 0x1c, 0x10, 0x00, 0x90, 0x12, 0x91, 0x88,
  0x00, 0x80, 0x40, 0x00, 0x21, 0x14, 0x08, 0x00, 0x00, 0x00, 0xf0, 0x03,
  0xf0, 0x12, 0x91, 0x88, 0x00, 0x80, 0x40, 0x00, 0x21, 0x14, 0x08, 0x00,
  0x00, 0x00, 0xf0, 0x03, 0x30, 0x12, 0xf1, 0x88, 0x07, 0x80, 0x40, 0x00,
  0x21, 0xf4, 0x08, 0x00, 0x20, 0x00, 0x10, 0x00, 0x50, 0x12, 0x91, 0x88,
  0x00, 0x00, 0x3f, 0x00, 0x21, 0x14, 0x08, 0x00, 0x20, 0x1c, 0x10, 0x00,
  0x90, 0x12, 0x91, 0x88, 0x00, 0x00, 0x1c, 0x00, 0x21, 0x14, 0x08, 0x00,
  0x20, 0x38, 0x10, 0x00, 0x90, 0x12, 0x91, 0x88, 0x00, 0x00, 0x1c, 0x00,
  0x21, 0x14, 0x08, 0x00, 0xf8, 0x60, 0x10, 0x00, 0x90, 0x0c, 0x91, 0x88,
  0x07, 0x00, 0x1c, 0x00, 0xe1, 0x15, 0x08, 0x00, 0x70, 0xc0, 0x1f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x20, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x41, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x44, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x61, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x48, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x19, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x48, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x09, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x48, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x44, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x3c, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x44, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x21, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x03, 0x01, 0x00, 0x00, 0x00,
  0xc0, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x02,
  0x01, 0x00, 0x00, 0x00, 0x70, 0x20, 0x00, 0x00, 0x10, 0x99, 0xd0, 0x03,
  0x00, 0x00, 0x07, 0x02, 0xe1, 0x69, 0xe4, 0x24, 0x38, 0x20, 0x00, 0x00,
  0xb0, 0xa5, 0x50, 0x00, 0x02, 0x82, 0x03, 0x02, 0x21, 0xea, 0x14, 0x25,
  0x00, 0xe0, 0x07, 0x00, 0x50, 0xa5, 0x50, 0x00, 0x03, 0x06, 0x00, 0x7e,
  0x21, 0xaa, 0x15, 0x24, 0x00, 0xe0, 0x07, 0x00, 0x50, 0xa5, 0x50, 0x80,
  0xff, 0x0f, 0x00, 0x7e, 0x21, 0x2a, 0x15, 0x24, 0x00, 0x20, 0x00, 0x00,
  0x10, 0x25, 0xd9, 0x03, 0x03, 0x06, 0x00, 0x02, 0xe1, 0x29, 0x17, 0x3c,
  0x38, 0x20, 0x00, 0x00, 0x10, 0x25, 0x49, 0x00, 0x02, 0x82, 0x03, 0x02,
  0x21, 0x28, 0x16, 0x24, 0x70, 0x20, 0x00, 0x00, 0x10, 0x25, 0x49, 0x00,
  0x00, 0x00, 0x07, 0x02, 0x21, 0x28, 0x16, 0x24, 0xc0, 0x20, 0x00, 0x00,
  0x10, 0x25, 0x45, 0x00, 0x00, 0x00, 0x0c, 0x02, 0x21, 0x28, 0x14, 0x25,
  0x80, 0x3f, 0x00, 0x00, 0x10, 0x19, 0xc7, 0x03, 0x00, 0x00, 0xf8, 0x03,
  0x21, 0x28, 0xe4, 0x24, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};

#define logo_we_black_width 128  // Defining WEiI Bitmap
#define logo_we_black_height 64
static unsigned char logo_we_black_bits[] U8G_PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x70, 0xfc, 0xff, 0xff, 0xf0, 0xe1, 0xff, 0xff,
  0xc3, 0x7b, 0xd1, 0x9d, 0x49, 0x51, 0xc9, 0x00, 0x78, 0x00, 0x00, 0x80,
  0x10, 0x00, 0x00, 0x00, 0x42, 0x4a, 0x91, 0x44, 0x4a, 0x53, 0xe5, 0x01,
  0x38, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x42, 0x4a, 0x91, 0x44,
  0x48, 0x57, 0x23, 0x01, 0x08, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00,
  0xc2, 0x4b, 0x91, 0x5c, 0x78, 0x55, 0x27, 0x01, 0x08, 0x00, 0x00, 0x80,
  0x10, 0x00, 0x00, 0x00, 0x42, 0x48, 0x91, 0x44, 0x48, 0x5d, 0xed, 0x01,
  0x08, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x42, 0x48, 0x91, 0x44,
  0x4a, 0x59, 0x29, 0x01, 0x08, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00,
  0x42, 0x78, 0x97, 0x9c, 0x49, 0x51, 0x29, 0x01, 0x08, 0x00, 0x00, 0x80,
  0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0xff, 0x10, 0x00, 0x00, 0x00, 0x42, 0xa4, 0x73, 0x61,
  0x92, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x42, 0xa4, 0x14, 0x91, 0xca, 0x03, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01,
  0x10, 0x00, 0x00, 0x00, 0x42, 0xa4, 0x14, 0x31, 0x46, 0x02, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x42, 0xa4, 0x73, 0x21,
  0x4e, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x42, 0xa4, 0x14, 0x41, 0xda, 0x03, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01,
  0x10, 0x00, 0x00, 0x00, 0x42, 0xa4, 0x14, 0x91, 0x52, 0x02, 0x00, 0x00,
  0x08, 0x00, 0x00, 0xff, 0x10, 0x00, 0x00, 0x00, 0xc2, 0xb9, 0x73, 0x67,
  0x52, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x80,
  0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x80,
  0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0xff, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x42, 0x54, 0xce, 0x25, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01,
  0x10, 0x00, 0x00, 0x00, 0x42, 0x54, 0x12, 0x55, 0x02, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x42, 0x55, 0x92, 0x54,
  0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x42, 0x25, 0xd2, 0x74, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01,
  0x10, 0x00, 0x00, 0x00, 0x82, 0x22, 0x52, 0x54, 0x02, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0xff, 0x10, 0x00, 0x00, 0x00, 0x82, 0x22, 0xce, 0x55,
  0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x80,
  0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0xc2, 0xc5, 0xd5, 0xdd,
  0xdd, 0x59, 0xa5, 0x2a, 0x08, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00,
  0x42, 0x44, 0x94, 0x54, 0x49, 0x44, 0xa5, 0x2a, 0x08, 0x00, 0x00, 0x80,
  0x10, 0x00, 0x00, 0x00, 0xc2, 0xc5, 0x8d, 0x5c, 0xc9, 0xc5, 0xad, 0x26,
  0x18, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x42, 0x44, 0x9c, 0x54,
  0x49, 0xc4, 0xb5, 0x2e, 0x38, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00,
  0x42, 0x44, 0x94, 0x54, 0x49, 0x44, 0xa5, 0x2a, 0x70, 0xfc, 0xff, 0xff,
  0xf0, 0xf1, 0xff, 0xff, 0xc3, 0xdd, 0x95, 0xd4, 0xc9, 0x59, 0xa5, 0x2a,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0xe9, 0x6e, 0x36, 0xb9, 0xaa, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x29, 0xaa, 0xaa, 0x92, 0xaa, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, 0xaa, 0xaa,
  0x92, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0xed, 0xea, 0xaa, 0x13, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x29, 0xaa, 0xa2, 0x12, 0xa9, 0x00, 0x00,
  0x90, 0x90, 0x4e, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x40, 0x29, 0xae, 0xa2,
  0x12, 0xa9, 0x00, 0x00, 0x50, 0x50, 0x52, 0x2a, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x4e, 0x1a,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x50, 0x50, 0x4a, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x90, 0x92, 0x92, 0x4b, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};

#define logo_wm_black_width 128
#define logo_wm_black_height 64  // Defining WM bitmap
static unsigned char logo_wm_black_bits[] U8G_PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x7b, 0xd1, 0x9d, 0x49, 0x51, 0xc9, 0x00, 0x00, 0x8f, 0xff, 0xff,
  0x80, 0xff, 0xff, 0x7f, 0x40, 0x4a, 0x91, 0x44, 0x4a, 0x53, 0xe5, 0x01,
  0x00, 0x01, 0x00, 0x80, 0xc1, 0x00, 0x00, 0x40, 0x40, 0x4a, 0x91, 0x44,
  0x48, 0x57, 0x23, 0x01, 0x00, 0x01, 0x00, 0x00, 0x63, 0x00, 0x00, 0x40,
  0xc0, 0x4b, 0x91, 0x5c, 0x78, 0x55, 0x27, 0x01, 0x00, 0x01, 0x00, 0x00,
  0x36, 0x00, 0x00, 0x40, 0x40, 0x48, 0x91, 0x44, 0x48, 0x5d, 0xed, 0x01,
  0x00, 0x01, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x40, 0x40, 0x48, 0x91, 0x44,
  0x4a, 0x59, 0x29, 0x01, 0x00, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x40,
  0x40, 0x78, 0x97, 0x9c, 0x49, 0x51, 0x29, 0x01, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0xa4, 0x73, 0x61,
  0x92, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x40, 0xa4, 0x14, 0x91, 0xca, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x40, 0x40, 0xa4, 0x14, 0x31, 0x46, 0x02, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0xa4, 0x73, 0x21,
  0x4e, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x40, 0xa4, 0x14, 0x41, 0xda, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x40, 0x40, 0xa4, 0x14, 0x91, 0x52, 0x02, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xc0, 0xb9, 0x73, 0x67,
  0x52, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x40, 0x54, 0xce, 0x25, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x01,
  0x00, 0xe0, 0x0f, 0x40, 0x40, 0x54, 0x12, 0x55, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x08, 0x01, 0x00, 0x60, 0x0c, 0x40, 0x40, 0x25, 0x92, 0x54,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x08, 0x01, 0x00, 0x60, 0x0c, 0x40,
  0x40, 0x25, 0xd2, 0x74, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x08, 0x01,
  0x00, 0x60, 0x0c, 0x40, 0x80, 0x22, 0x52, 0x54, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x08, 0x01, 0x00, 0x60, 0x0c, 0x40, 0x80, 0x22, 0xce, 0x55,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x08, 0x01, 0x00, 0x60, 0x0c, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8f, 0x0f, 0xff,
  0xff, 0x7f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x74, 0x2e, 0x99,
  0x94, 0x7b, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x16, 0x21, 0xa5, 0x55, 0x20, 0xab, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x75, 0x21, 0xa5, 0x55, 0x30, 0xeb, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x14, 0xe1, 0xbd,
  0x56, 0x10, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0x14, 0x21, 0xa5, 0x56, 0x08, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x74, 0x2e, 0xa5, 0x94, 0x7b, 0x49, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x84, 0x74, 0x52, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x82, 0x92, 0x52, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x81, 0x71, 0xd2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x82, 0x52, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x94, 0x94, 0x5c, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};

void draw_wm_black(void) {  // draw WM LOGO
  u8g.firstPage();
  do { u8g.drawXBMP(0, 0, logo_wm_black_width, logo_wm_black_height, logo_wm_black_bits); } while (u8g.nextPage());
  delay(2500);
}

void draw_we_black(void) {  // draw WE LOGO
  u8g.firstPage();
  do { u8g.drawXBMP(0, 0, logo_we_black_width, logo_we_black_height, logo_we_black_bits); } while (u8g.nextPage());
  delay(2500);
}
void draw_GUI(void) {  // draw GUI bitmap
  u8g.drawXBMP(0, 0, GUI_width, GUI_height, GUI_bits);
}

void update_positions(void) {  // calculate percent usages, round them and display at set cooords to match GUI

  servo_1_percents = (servo_1_position / 180.0 * 100.0);  // calculate percent usage
  servo_2_percents = ((servo_2_position - 60.0) / 120.0 * 100.0);
  servo_3_percents = ((servo_3_position - 20.0) / 60.0 * 100.0);
  servo_4_percents = ((servo_4_position - 70.0) / 50.0 * 100.0);

  servo_1_percent_usage = round(servo_1_percents);  // round float values in order to display them properly
  servo_2_percent_usage = round(servo_2_percents);
  servo_3_percent_usage = round(servo_3_percents);
  servo_4_percent_usage = round(servo_4_percents);

  //u8g.setFont(u8g_font_unifont);
  // u8g.setFont(u8g_font_6x10);
  // u8g.setPrintPos(30, 12);
  // u8g.print(servo_1_percent_usage);
  // u8g.setPrintPos(95, 12);
  // u8g.print(servo_2_percent_usage);
  // u8g.setPrintPos(30, 45);
  // u8g.print(servo_3_percent_usage);
  // u8g.setPrintPos(95, 45);
  // u8g.print(servo_4_percent_usage);

  u8g.setFont(u8g_font_6x10);
  u8g.setPrintPos(30, 9);
  u8g.print(servo_1_percent_usage);
  u8g.drawStr(50, 9, "%");

  u8g.setPrintPos(95, 9);
  u8g.print(servo_2_percent_usage);
  u8g.drawStr(120, 9, "%");

  u8g.setPrintPos(30, 42);
  u8g.print(servo_3_percent_usage);
  u8g.drawStr(50, 42, "%");

  u8g.setPrintPos(95, 42);
  u8g.drawStr(120, 42, "%");
  u8g.print(servo_4_percent_usage);
}

void servo_control() {  // if servo_x_plus is pressed increment position, if servo_x_minus is pressed decrement position, write position to servomotor

  if (digitalRead(servo_1_plus) == LOW && servo_1_position <= 180) {  // increment servo 1 position if position <= max position & button pressed
    servo_1_position = servo_1_position + 4;
    if (servo_1_position > 180) { servo_1_position = 180; };
    s1.write(servo_1_position);
  }

  if (digitalRead(servo_1_minus) == LOW && servo_1_position >= 0) {  // decrement servo 1 position if position >= min position & button pressed
    servo_1_position = servo_1_position - position_change;
    if (servo_1_position < 0) { servo_1_position = 0; };
    s1.write(servo_1_position);
  }

  if (digitalRead(servo_2_plus) == LOW && servo_2_position <= 180) {  // increment servo 2 position if position < max position & button pressed
    servo_2_position = servo_2_position + position_change;
    if (servo_2_position > 180) { servo_2_position = 180; };
    s2.write(servo_2_position);
  }

  if (digitalRead(servo_2_minus) == LOW && servo_2_position >= 0) {  // decrement servo 2 position if position >= min position & button pressed
    servo_2_position = servo_2_position - position_change;
    if (servo_2_position < 60) { servo_2_position = 60; };
    s2.write(servo_2_position);
  }

  if (digitalRead(servo_3_plus) == LOW && servo_3_position <= 80) {  // increment servo 3 position if position < max position & button pressed
    servo_3_position = servo_3_position + position_change;
    if (servo_3_position > 80) { servo_3_position = 80; };
    s3.write(servo_3_position);
  }

  if (digitalRead(servo_3_minus) == LOW && servo_3_position >= 20) {  // decrement servo 3 position if position >= min position & button pressed
    servo_3_position = servo_3_position - position_change;
    if (servo_3_position < 20) { servo_3_position = 20; };
    s3.write(servo_3_position);
  }

  if (digitalRead(servo_4_plus) == LOW && servo_4_position <= 180) {  // increment servo 4 position if position < max position & button pressed
    servo_4_position = servo_4_position + pinch;
    if (servo_4_position > 120) { servo_4_position = 120; };
    s4.write(servo_4_position);
  }

  if (digitalRead(servo_4_minus) == LOW && servo_4_position >= 70) {  // decrement servo 4 position if position >= min position & button pressed
    servo_4_position = servo_4_position - pinch;
    if (servo_4_position < 70) { servo_4_position = 70; };
    s4.write(servo_4_position);
  }
}

void usage_bar(void) {                                // draw progress bar showing servo_x percent usage
  u8g.drawBox(15, 10, 50, 1);                         // upper bar border for servo 1
  u8g.drawBox(15, 11, servo_1_percent_usage / 2, 3);  // servo 1 progress bar

  u8g.drawBox(79, 10, 50, 1);                         // upper bar border for servo 2
  u8g.drawBox(79, 11, servo_2_percent_usage / 2, 3);  // servo 2 progress bar

  u8g.drawBox(15, 43, 50, 1);                         // upper bar border for servo 3
  u8g.drawBox(15, 44, servo_3_percent_usage / 2, 3);  // servo 3 progress bar

  u8g.drawBox(79, 43, 50, 1);                         // upper bar border for servo
  u8g.drawBox(79, 44, servo_4_percent_usage / 2, 3);  // servo 4 progress bar
}


void setup() {

  s1.attach(servo_1);
  s1.write(servo_1_position);  // Attaching servos and setting their position to default
  s2.attach(servo_2);
  s2.write(servo_2_position);
  s3.attach(servo_3);
  s3.write(servo_3_position);
  s4.attach(servo_4);
  s4.write(servo_4_position);

  pinMode(servo_1_plus, INPUT_PULLUP);  // Arduino ports configured as inputs with internal pullup resistor
  pinMode(servo_1_minus, INPUT_PULLUP);
  pinMode(servo_2_plus, INPUT_PULLUP);
  pinMode(servo_2_minus, INPUT_PULLUP);
  pinMode(servo_3_plus, INPUT_PULLUP);
  pinMode(servo_3_minus, INPUT_PULLUP);
  pinMode(servo_4_plus, INPUT_PULLUP);
  pinMode(servo_4_minus, INPUT_PULLUP);

  draw_we_black();  // Draw WEiI LOGO
}

void loop() {
  // switch (MODE) {
  //   cases
  // }
  u8g.firstPage();
  do {
    draw_GUI();
    update_positions();
    usage_bar();
  } while (u8g.nextPage());
  servo_control();
}
